import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as a,o as n}from"./app-B-pwwXXS.js";const l={};function t(r,s){return n(),e("div",null,s[0]||(s[0]=[a(`<h1 id="在kubernetes上安装metallb和nginx-ingress" tabindex="-1"><a class="header-anchor" href="#在kubernetes上安装metallb和nginx-ingress"><span>在Kubernetes上安装MetalLB和Nginx Ingress</span></a></h1><h2 id="为什么需要metallb和ingress" tabindex="-1"><a class="header-anchor" href="#为什么需要metallb和ingress"><span>为什么需要MetalLB和Ingress</span></a></h2><p>在Kubernetes集群中，尤其是裸机（Bare Metal）环境下，存在两个常见的网络访问挑战：</p><ol><li><strong>LoadBalancer类型服务的实现</strong>：Kubernetes没有为裸机集群提供网络负载均衡器(LoadBalancer类型的服务)的内置实现</li><li><strong>服务暴露管理</strong>：当有多个服务需要被集群外部访问时，为每个服务单独暴露端口既不安全也不便于管理</li></ol><p>这就是MetalLB和Ingress出现的原因 - MetalLB为裸机集群提供LoadBalancer能力，而Ingress则提供了统一的入口管理和路由功能。</p><h2 id="网络规划准备" tabindex="-1"><a class="header-anchor" href="#网络规划准备"><span>网络规划准备</span></a></h2><p>在开始安装前，需要进行简单的网络规划：</p><ul><li>确定Kubernetes集群使用的网段（例如：172.18.0.0/16）</li><li>为MetalLB分配一段虚拟IP地址范围，用于LoadBalancer类型的服务（例如：172.18.8.83-172.18.8.89）</li></ul><h2 id="安装metallb" tabindex="-1"><a class="header-anchor" href="#安装metallb"><span>安装MetalLB</span></a></h2><h3 id="步骤1-部署metallb组件" tabindex="-1"><a class="header-anchor" href="#步骤1-部署metallb组件"><span>步骤1：部署MetalLB组件</span></a></h3><p>使用官方提供的YAML文件直接安装MetalLB：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用最新版本的MetalLB</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apply</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://raw.githubusercontent.com/metallb/metallb/main/config/manifests/metallb-native.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 或者使用指定版本（如v0.9.5）</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/namespace.yaml</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.5/manifests/metallb.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="步骤2-配置kube-proxy" tabindex="-1"><a class="header-anchor" href="#步骤2-配置kube-proxy"><span>步骤2：配置Kube-Proxy</span></a></h3><p>修改kube-proxy配置，添加strictARP: true设置：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">apiVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">kubeproxy.config.k8s.io/v1alpha1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">kind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">KubeProxyConfiguration</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ipvs&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ipvs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  strictARP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="步骤3-验证metallb安装" tabindex="-1"><a class="header-anchor" href="#步骤3-验证metallb安装"><span>步骤3：验证MetalLB安装</span></a></h3><p>等待MetalLB Pod运行，并验证安装状态：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pods</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> metallb-system</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> l2advertisements.metallb.io</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wide</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> metallb-system</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装nginx-ingress-controller" tabindex="-1"><a class="header-anchor" href="#安装nginx-ingress-controller"><span>安装Nginx Ingress Controller</span></a></h2><h3 id="步骤1-选择适合的部署方式" tabindex="-1"><a class="header-anchor" href="#步骤1-选择适合的部署方式"><span>步骤1：选择适合的部署方式</span></a></h3><p>对于裸机集群，我们可以使用以下命令安装Ingress Nginx Controller：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apply</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.2.0/deploy/static/provider/baremetal/deploy.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="步骤2-处理镜像拉取问题" tabindex="-1"><a class="header-anchor" href="#步骤2-处理镜像拉取问题"><span>步骤2：处理镜像拉取问题</span></a></h3><p>在国内环境中，可能会遇到无法拉取gcr.io镜像的问题。可以修改部署文件，将镜像替换为国内源：</p><p>原始镜像：</p><div class="language-plain line-numbers-mode" data-highlighter="shiki" data-ext="plain" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>k8s.gcr.io/ingress-nginx/controller:v0.41.2@sha256:1f4f402b9c14f3ae92b11ada1dfe9893a88f0faeb0b2f4b903e2c67a0c3bf0de</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>替换为国内镜像：</p><div class="language-plain line-numbers-mode" data-highlighter="shiki" data-ext="plain" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>registry.cn-beijing.aliyuncs.com/lingshiedu/ingress-nginx-controller</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="步骤3-创建ingress-controller" tabindex="-1"><a class="header-anchor" href="#步骤3-创建ingress-controller"><span>步骤3：创建Ingress Controller</span></a></h3><p>使用修改后的YAML文件创建Ingress Controller：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ingress-nginx-controller.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="步骤4-配置service类型" tabindex="-1"><a class="header-anchor" href="#步骤4-配置service类型"><span>步骤4：配置Service类型</span></a></h3><p>在裸机集群中使用Ingress Nginx，通常有三种模式：</p><ol><li><strong>LoadBalancer模式</strong>：将ingress-nginx-controller的Service类型设置为LoadBalancer</li></ol><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">LoadBalancer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li><strong>NodePort模式</strong>：通过NodePort暴露服务</li><li><strong>HostNetwork模式</strong>：直接使用主机网络</li></ol><h2 id="在裸机环境中使用loadbalancer类型服务" tabindex="-1"><a class="header-anchor" href="#在裸机环境中使用loadbalancer类型服务"><span>在裸机环境中使用LoadBalancer类型服务</span></a></h2><p>安装完MetalLB和Ingress后，就可以在裸机集群中使用LoadBalancer类型的服务了。MetalLB会自动为这类服务分配之前规划的虚拟IP地址范围内的IP。</p><h2 id="部署示例应用程序" tabindex="-1"><a class="header-anchor" href="#部署示例应用程序"><span>部署示例应用程序</span></a></h2><p>安装完成后，可以部署一个简单的Nginx应用程序来测试：</p><ol><li>部署Nginx应用</li><li>创建对应的Service（类型为ClusterIP）</li><li>创建Ingress资源，配置域名和路径规则</li></ol><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>在Kubernetes裸机环境中，MetalLB和Ingress Nginx是一对强大的组合，它们解决了裸机集群中负载均衡和服务暴露的关键问题。通过上述步骤，您可以在自己的Kubernetes集群中成功安装和配置这两个组件，为您的应用程序提供稳定、可靠的外部访问能力。</p>`,43)]))}const p=i(l,[["render",t]]),o=JSON.parse('{"path":"/K8S/3.html","title":"在Kubernetes上安装MetalLB和Nginx Ingress","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-03-07T00:00:00.000Z","category":["K8S"],"description":"在Kubernetes上安装MetalLB和Nginx Ingress 为什么需要MetalLB和Ingress 在Kubernetes集群中，尤其是裸机（Bare Metal）环境下，存在两个常见的网络访问挑战： LoadBalancer类型服务的实现：Kubernetes没有为裸机集群提供网络负载均衡器(LoadBalancer类型的服务)的内置实...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"在Kubernetes上安装MetalLB和Nginx Ingress\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-07T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-30T07:29:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan Su\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/K8S/3.html"}],["meta",{"property":"og:site_name","content":"Blog"}],["meta",{"property":"og:title","content":"在Kubernetes上安装MetalLB和Nginx Ingress"}],["meta",{"property":"og:description","content":"在Kubernetes上安装MetalLB和Nginx Ingress 为什么需要MetalLB和Ingress 在Kubernetes集群中，尤其是裸机（Bare Metal）环境下，存在两个常见的网络访问挑战： LoadBalancer类型服务的实现：Kubernetes没有为裸机集群提供网络负载均衡器(LoadBalancer类型的服务)的内置实..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-30T07:29:16.000Z"}],["meta",{"property":"article:published_time","content":"2025-03-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-30T07:29:16.000Z"}]]},"git":{"createdTime":1761809356000,"updatedTime":1761809356000,"contributors":[{"name":"ryanchosen","username":"ryanchosen","email":"syhchosen@google.com","commits":1,"url":"https://github.com/ryanchosen"}]},"readingTime":{"minutes":2.64,"words":793},"filePathRelative":"K8S/3.md","excerpt":"\\n<h2>为什么需要MetalLB和Ingress</h2>\\n<p>在Kubernetes集群中，尤其是裸机（Bare Metal）环境下，存在两个常见的网络访问挑战：</p>\\n<ol>\\n<li><strong>LoadBalancer类型服务的实现</strong>：Kubernetes没有为裸机集群提供网络负载均衡器(LoadBalancer类型的服务)的内置实现</li>\\n<li><strong>服务暴露管理</strong>：当有多个服务需要被集群外部访问时，为每个服务单独暴露端口既不安全也不便于管理</li>\\n</ol>\\n<p>这就是MetalLB和Ingress出现的原因 - MetalLB为裸机集群提供LoadBalancer能力，而Ingress则提供了统一的入口管理和路由功能。</p>","autoDesc":true}');export{p as comp,o as data};
